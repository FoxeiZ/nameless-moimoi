name: anything python

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  all-the-things:
    if: ${{ github.repository == 'nameless-on-discord/nameless' }}
    runs-on: ubuntu-latest
    name: Test, lint and publish
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install --upgrade setuptools wheel
          pip install -U -r requirements_core.txt
          pip install -U -r requirements_dev.txt

      - name: Create dummy config file
        run: |
          cp NamelessConfig_example.py NamelessConfig.py

      - name: Code format checking (black)
        run: |
          black . --check --diff

      - name: Code format checking (isort)
        run: |
          isort . --check --diff

      - name: Type annotation checking (pyright)
        run: |
          pyright

      - name: Linting (flake8)
        run: |
          flake8 --select=E

      - name: Linting (pylint)
        run: |
          pylint **/*.py --disable=W,R,C

      - name: Run tests and return coverages (pytest & friends)
        run: |
          pytest --cov-report term-missing --cov=nameless.database --cov=nameless.commons.Utility tests/

      - name: Deploy to server (dev)
        if: ${{ github.ref == 'refs/heads/dev' }}
        run: |
          sudo apt install sshpass -y
          echo pm2 restart ${{ secrets.INSTANCE_NAME }} > script.sh
          sshpass -p ${{ secrets.SSH_PASSWORD }} ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "bash -s" < script.sh > /dev/null

      - name: Deploy to server (main)
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          sudo apt install sshpass -y
          echo pm2 restart ${{ secrets.STABLE_INSTANCE_NAME }} > script.sh
          sshpass -p ${{ secrets.SSH_PASSWORD }} ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "bash -s" < script.sh > /dev/null